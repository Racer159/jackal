kind: ZarfPackageConfig
metadata:
  name: distro-eks
  description: Deploy a EKS K8s cluster
  architecture: multi
  version: 0.0.2

variables:
  - name: CLUSTER_NAME
    prompt: true

  - name: INSTANCE_TYPE
    description: The instance type for the worker nodes
    default: t3.small

  - name: CLUSTER_REGION
    default: us-east-1

  - name: CLUSTER_VERSION
    default: "1.23"

components:
  - name: load-eksctl
    required: true
    actions:
      onDeploy:
        after:
          # Remove existing eksctl
          - cmd: rm -f eksctl
          # Extract the correct linux or mac binary from the tarball
          - cmd: ./zarf tools archiver decompress archives/eksctl_$(uname -s)_$(uname -m).tar.gz .
          # Cleanup temp files
          - cmd: rm -fr archives
    files:
      - source: eks.yaml
        target: eks.yaml
      - source: https://github.com/weaveworks/eksctl/releases/download/v0.143.0/eksctl_Darwin_amd64.tar.gz
        target: archives/eksctl_Darwin_x86_64.tar.gz
        shasum: 41a834ca3b2c33b3c1f49c90c87666e9b276a1635e27a6a1c14c0cf5fdd1ba0b
      - source: https://github.com/weaveworks/eksctl/releases/download/v0.143.0/eksctl_Darwin_arm64.tar.gz
        target: archives/eksctl_Darwin_arm64.tar.gz
        shasum: e2d7c93b2515393c02002cc51968925c528068aee03e7024cfcab0e03a69f66c
      - source: https://github.com/weaveworks/eksctl/releases/download/v0.143.0/eksctl_Linux_amd64.tar.gz
        target: archives/eksctl_Linux_x86_64.tar.gz
        shasum: 35a276e0f30584ba72fe36ef997427e4a62e2749ad3585c2a6e1274080fcc4bb

  - name: deploy-eks-cluster
    description: Create an EKS cluster!
    actions:
      onDeploy:
        before:
          - cmd: ./eksctl create cluster --dry-run -f eks.yaml
          - cmd: sleep 15
          - cmd: ./eksctl create cluster -f eks.yaml
        after:
          - cmd: ./eksctl utils write-kubeconfig -c ${ZARF_VAR_CLUSTER_NAME}
          - cmd: ./zarf tools kubectl create namespace zarf
          - cmd: ./zarf tools kubectl create secret generic zarf-eks-yaml -n zarf --from-file=eks.yaml

  - name: teardown-eks-cluster
    description: Delete the EKS cluster that this package was used to create.
    actions:
      onDeploy:
        before:
          # Get the secret that stores the eks.yaml we used to create this cluster
          - cmd: ./zarf tools kubectl get secret -n zarf zarf-eks-yaml -o jsonpath='{.data.*}' | base64 -d > eks.yaml
          # TODO: Error handling in case the eks.yaml isn't what we expect ???
          # Use eksctl to delete the cluster
          - cmd: ./eksctl delete cluster -f eks.yaml --disable-nodegroup-eviction --wait
        after:
          # clean up after ourselves
          - cmd: rm -f eks.yaml
          - cmd: rm -f eksctl
