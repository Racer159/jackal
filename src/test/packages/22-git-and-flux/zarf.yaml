kind: ZarfPackageConfig
metadata:
  name: git-data-check-secrets
  version: 1.0.0
  description: Demo Zarf loading resources into a gitops service - while checking that the component secret gets updated with each component

components:
  - name: flux-demo
    required: true
    images:
      - ghcr.io/stefanprodan/podinfo:6.0.0
    repos:
      # Do a full Git Repo Mirror of a flux repo
      - https://github.com/stefanprodan/podinfo.git

  - name: full-repo
    required: true
    repos:
      # Do a full Git Repo Mirror
      - https://github.com/kelseyhightower/nocode.git
    actions:
      onDeploy:
        before:
          # Check to verify the package secret has been saved for the already deployed component
          - cmd: test $(./zarf tools kubectl get secret -n zarf zarf-package-git-data-check-secrets -o jsonpath='{.data.*}' | base64 --decode | jq -r .deployedComponents | jq '. | length') -eq 1
            description: Check that the package secret has been updated with the deployed component
            maxRetries: 3

  - name: specific-tag
    required: true
    repos:
      # Do a tag-provided Git Repo mirror
      - https://github.com/defenseunicorns/zarf.git@v0.15.0
      # Use the git refspec pattern to get a tag
      - https://github.com/defenseunicorns/zarf.git@refs/tags/v0.16.0
    actions:
      onDeploy:
        before:
          # Check to verify the package secret has been saved for the already deployed component
          - cmd: test $(./zarf tools kubectl get secret -n zarf zarf-package-git-data-check-secrets -o jsonpath='{.data.*}' | base64 --decode | jq -r .deployedComponents | jq '. | length') -eq 2
            description: Check that the package secret has been updated with the deployed component
            maxRetries: 3

  - name: specific-branch
    required: true
    repos:
      # Do a branch-provided Git Repo mirror
      - https://github.com/DoD-Platform-One/big-bang.git@refs/heads/release-1.54.x
    actions:
      onDeploy:
        before:
          # Check to verify the package secret has been saved for the already deployed component
          - cmd: test $(./zarf tools kubectl get secret -n zarf zarf-package-git-data-check-secrets -o jsonpath='{.data.*}' | base64 --decode | jq -r .deployedComponents | jq '. | length') -eq 3
            description: Check that the package secret has been updated with the deployed component
            maxRetries: 3

  - name: specific-hash
    required: true
    repos:
      # Do a commit hash Git Repo mirror
      - https://github.com/defenseunicorns/zarf.git@c74e2e9626da0400e0a41e78319b3054c53a5d4e
      # Clone an azure repo (w/SHA) that breaks in go-git and has to fall back to the host git
      - https://me0515@dev.azure.com/me0515/zarf-public-test/_git/zarf-public-test@524980951ff16e19dc25232e9aea8fd693989ba6
    actions:
      onDeploy:
        before:
          # Check to verify the package secret has been saved for the already deployed component
          - cmd: test $(./zarf tools kubectl get secret -n zarf zarf-package-git-data-check-secrets -o jsonpath='{.data.*}' | base64 --decode | jq -r .deployedComponents | jq '. | length') -eq 4
            description: Check that the package secret has been updated with the deployed component
            maxRetries: 3
        onSuccess:
          - cmd: test $(./zarf tools kubectl get secret -n zarf zarf-package-git-data-check-secrets -o jsonpath='{.data.*}' | base64 --decode | jq -r .deployedComponents | jq '. | length') -eq 5
            description: Check that the package secret has been updated with the deployed component
            maxRetries: 3
